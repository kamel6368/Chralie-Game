#pragma once
#include <SFML\Graphics.hpp>
#include "Crossing.h"
using namespace sf;

//crossings
const int NUMBER_OF_CROSSINGS = 137;
const int CROSSING_SIZE = 1;
//up,down,right,left; each number is index(number) of following crossing
const Crossing CROSSINGS[NUMBER_OF_CROSSINGS] =
{
	/* 1 */		Crossing(0,7,2,0, Vector2f(351,84)),
	/* 2 */		Crossing(0,3,0,1, Vector2f(424,84)),
	/* 3 */		Crossing(2,4,32,0, Vector2f(424,222)),
	/* 4 */		Crossing(3,0,0,5, Vector2f(424,250)),
	/* 5 */		Crossing(6,8,4,0, Vector2f(242,250)),
	/* 6 */		Crossing(0,5,7,0, Vector2f(242,161)),
	/* 7 */		Crossing(1,0,0,6, Vector2f(351,161)),
	/* 8 */		Crossing(5,0,31,9, Vector2f(242,354)),
	/* 9 */		Crossing(0,10,8,0, Vector2f(137,354)),
	/* 10 */	Crossing(9,0,11,0, Vector2f(137,735)),
	/* 11 */	Crossing(12,22,16,10, Vector2f(333,735)),
	/* 12 */	Crossing(20,11,17,13, Vector2f(333,640)),
	/* 13 */	Crossing(14,0,12,0, Vector2f(235,640)),
	/* 14 */	Crossing(0,13,15,0, Vector2f(235,447)),
	/* 15 */	Crossing(0,16,0,14, Vector2f(608,447)),
	/* 16 */	Crossing(15,0,0,11, Vector2f(608,735)),
	/* 17 */	Crossing(18,0,0,12, Vector2f(517,640)),
	/* 18 */	Crossing(0,17,0,19, Vector2f(517,527)),
	/* 19 */	Crossing(0,0,18,20, Vector2f(422,527)),
	/* 20 */	Crossing(0,12,19,0, Vector2f(333,527)),
	/* 21 */	Crossing(0,102,23,22, Vector2f(375,814)),
	/* 22 */	Crossing(11,0,21,0, Vector2f(333,814)),
	/* 23 */	Crossing(0,101,24,21, Vector2f(657,814)),
	/* 24 */	Crossing(25,0,0,23, Vector2f(699,814)),
	/* 25 */	Crossing(0,24,26,0, Vector2f(699,616)),
	/* 26 */	Crossing(27,96,0,25, Vector2f(786,616)),
	/* 27 */	Crossing(28,26,89,0, Vector2f(786,518)),
	/* 28 */	Crossing(83,27,0,29, Vector2f(786,460)),
	/* 29 */	Crossing(30,0,28,0, Vector2f(702,460)),
	/* 30 */	Crossing(0,29,0,31, Vector2f(702,354)),
	/* 31 */	Crossing(32,0,30,8, Vector2f(551,354)),
	/* 32 */	Crossing(33,31,0,3, Vector2f(551,222)),
	/* 33 */	Crossing(0,32,34,0, Vector2f(551,111)),
	/* 34 */	Crossing(35,86,0,33, Vector2f(747,111)),
	/* 35 */	Crossing(0,34,36,0, Vector2f(747,84)),
	/* 36 */	Crossing(0,79,37,35, Vector2f(1023,84)),
	/* 37 */	Crossing(0,38,0,36, Vector2f(1176,84)),
	/* 38 */	Crossing(37,74,39,0, Vector2f(1176,108)),
	/* 39 */	Crossing(0,40,0,38, Vector2f(1329,108)),
	/* 40 */	Crossing(39,0,41,0, Vector2f(1329,181)),
	/* 41 */	Crossing(0,71,42,40, Vector2f(1381,181)),
	/* 42 */	Crossing(43,0,0,41, Vector2f(1432,181)),
	/* 43 */	Crossing(0,42,44,0, Vector2f(1432,109)),
	/* 44 */	Crossing(45,0,0,43, Vector2f(1507,109)),
	/* 45 */	Crossing(0,44,46,0, Vector2f(1507,83)),
	/* 46 */	Crossing(0,54,47,45, Vector2f(1659,83)),
	/* 47 */	Crossing(0,48,0,46, Vector2f(1840,83)),
	/* 48 */	Crossing(47,0,0,49, Vector2f(1840,182)),
	/* 49 */	Crossing(0,50,48,0, Vector2f(1761,182)),
	/* 50 */	Crossing(49,0,0,51, Vector2f(1761,253)),
	/* 51 */	Crossing(0,55,50,52, Vector2f(1711,253)),
	/* 52 */	Crossing(53,0,51,0, Vector2f(1507,253)),
	/* 53 */	Crossing(0,52,54,0, Vector2f(1507,180)),
	/* 54 */	Crossing(46,0,0,53, Vector2f(1659,180)),
	/* 55 */	Crossing(51,0,0,56, Vector2f(1711,326)),
	/* 56 */	Crossing(0,57,55,70, Vector2f(1660,326)),
	/* 57 */	Crossing(56,0,58,0, Vector2f(1660,423)),
	/* 58 */	Crossing(0,61,59,57, Vector2f(1762,423)),
	/* 59 */	Crossing(60,0,0,58, Vector2f(1788,423)),
	/* 60 */	Crossing(0,59,0,0, Vector2f(1788,327)),
	/* 61 */	Crossing(58,62,0,66, Vector2f(1762,496)),
	/* 62 */	Crossing(61,0,0,63, Vector2f(1762,641)),
	/* 63 */	Crossing(0,137,62,64, Vector2f(1711,641)),
	/* 64 */	Crossing(66,0,63,65, Vector2f(1660,641)),
	/* 65 */	Crossing(0,132,64,116, Vector2f(1635,641)),
	/* 66 */	Crossing(0,64,61,67, Vector2f(1660,496)),
	/* 67 */	Crossing(68,0,66,0, Vector2f(1585,496)),
	/* 68 */	Crossing(0,67,0,69, Vector2f(1585,446)),
	/* 69 */	Crossing(70,0,68,126, Vector2f(1432,446)),
	/* 70 */	Crossing(0,69,56,71, Vector2f(1432,326)),
	/* 71 */	Crossing(41,0,70,72, Vector2f(1381,326)),
	/* 72 */	Crossing(73,0,71,0, Vector2f(1278,326)),
	/* 73 */	Crossing(0,72,0,75, Vector2f(1278,255)),
	/* 74 */	Crossing(38,75,0,79, Vector2f(1176,228)),
	/* 75 */	Crossing(74,76,73,0, Vector2f(1176,255)),
	/* 76 */	Crossing(75,125,0,77, Vector2f(1176,301)),
	/* 77 */	Crossing(79,0,76,78, Vector2f(1023,301)),
	/* 78 */	Crossing(0,124,77,0, Vector2f(997,301)),
	/* 79 */	Crossing(36,77,74,80, Vector2f(1023,228)),
	/* 80 */	Crossing(0,81,79,0, Vector2f(921,228)),
	/* 81 */	Crossing(80,88,0,82, Vector2f(921,271)),
	/* 82 */	Crossing(87,0,81,83, Vector2f(804,271)),
	/* 83 */	Crossing(0,28,82,84, Vector2f(786,271)),
	/* 84 */	Crossing(85,0,83,0, Vector2f(642,271)),
	/* 85 */	Crossing(0,84,86,0, Vector2f(642,178)),
	/* 86 */	Crossing(34,0,87,85, Vector2f(747,178)),
	/* 87 */	Crossing(0,82,0,86, Vector2f(804,178)),
	/* 88 */	Crossing(81,89,124,0, Vector2f(921,446)),
	/* 89 */	Crossing(88,90,0,27, Vector2f(921,518)),
	/* 90 */	Crossing(89,91,123,0, Vector2f(921,569)),
	/* 91 */	Crossing(90,0,92,0, Vector2f(921,762)),
	/* 92 */	Crossing(0,93,0,91, Vector2f(1048,762)),
	/* 93 */	Crossing(92,0,0,94, Vector2f(1048,858)),
	/* 94 */	Crossing(0,95,93,0, Vector2f(919,858)),
	/* 95 */	Crossing(94,103,0,97, Vector2f(919,932)),
	/* 96 */	Crossing(26,97,0,101, Vector2f(786,906)),
	/* 97 */	Crossing(96,98,95,0, Vector2f(786,932)),
	/* 98 */	Crossing(97,0,0,99, Vector2f(786,1001)),
	/* 99 */	Crossing(100,0,98,102, Vector2f(459,1001)),
	/* 100 */	Crossing(0,99,101,0, Vector2f(459,906)),
	/* 101 */	Crossing(23,0,96,100, Vector2f(657,906)),
	/* 102 */	Crossing(21,0,99,0, Vector2f(375,1001)),
	/* 103 */	Crossing(95,0,104,0, Vector2f(919,1003)),
	/* 104 */	Crossing(105,0,0,103, Vector2f(999,1003)),
	/* 105 */	Crossing(0,104,106,0, Vector2f(999,932)),
	/* 106 */	Crossing(107,0,0,105, Vector2f(1126,932)),
	/* 107 */	Crossing(0,106,108,0, Vector2f(1126,786)),
	/* 108 */	Crossing(119,109,113,107, Vector2f(1226,786)),
	/* 109 */	Crossing(108,0,110,0, Vector2f(1226,956)),
	/* 110 */	Crossing(111,0,0,109, Vector2f(1433,956)),
	/* 111 */	Crossing(0,110,134,112, Vector2f(1433,884)),
	/* 112 */	Crossing(113,0,111,0, Vector2f(1329,884)),
	/* 113 */	Crossing(114,112,0,108, Vector2f(1329,786)),
	/* 114 */	Crossing(0,113,115,0, Vector2f(1329,714)),
	/* 115 */	Crossing(116,0,0,114, Vector2f(1534,714)),
	/* 116 */	Crossing(0,115,65,117, Vector2f(1534,641)),
	/* 117 */	Crossing(131,0,116,118, Vector2f(1508,641)),
	/* 118 */	Crossing(130,0,117,119, Vector2f(1430,641)),
	/* 119 */	Crossing(0,108,118,120, Vector2f(1226,641)),
	/* 120 */	Crossing(128,121,119,0, Vector2f(1148,641)),
	/* 121 */	Crossing(120,0,0,122, Vector2f(1148,688)),
	/* 122 */	Crossing(123,0,121,0, Vector2f(1050,688)),
	/* 123 */	Crossing(129,122,0,90, Vector2f(1050,569)),
	/* 124 */	Crossing(78,0,125,88, Vector2f(997,446)),
	/* 125 */	Crossing(76,0,126,124, Vector2f(1176,446)),
	/* 126 */	Crossing(0,127,69,125, Vector2f(1330,446)),
	/* 127 */	Crossing(126,0,0,128, Vector2f(1330,522)),
	/* 128 */	Crossing(0,120,127,0, Vector2f(1148,522)),
	/* 129 */	Crossing(0,123,0,0, Vector2f(1050,520)),
	/* 130 */	Crossing(0,118,131,0, Vector2f(1430,520)),
	/* 131 */	Crossing(0,117,0,130, Vector2f(1508,520)),
	/* 132 */	Crossing(65,0,0,133, Vector2f(1635,786)),
	/* 133 */	Crossing(0,134,132,0, Vector2f(1481,786)),
	/* 134 */	Crossing(133,0,135,111, Vector2f(1481,884)),
	/* 135 */	Crossing(0,136,0,134, Vector2f(1610,884)),
	/* 136 */	Crossing(135,0,137,0, Vector2f(1610,982)),
	/* 137 */	Crossing(63,0,0,136, Vector2f(1711,982))
};